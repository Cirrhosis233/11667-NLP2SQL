{
  "academic_context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
  "advising_context": "CREATE TABLE public.area (course_id BIGINT, area TEXT);\nCREATE TABLE public.comment_instructor (instructor_id BIGINT DEFAULT '0'::BIGINT NOT NULL, student_id BIGINT DEFAULT '0'::BIGINT NOT NULL, score BIGINT, comment_text TEXT);\nCREATE TABLE public.course (course_id BIGINT DEFAULT '0'::BIGINT NOT NULL, name TEXT, department TEXT, number TEXT, credits TEXT, advisory_requirement TEXT, enforced_requirement TEXT, description TEXT, num_semesters BIGINT, num_enrolled BIGINT, has_discussion BOOLEAN, has_lab BOOLEAN, has_projects BOOLEAN, has_exams BOOLEAN, num_reviews BIGINT, clarity_score BIGINT, easiness_score BIGINT, helpfulness_score BIGINT);\nCREATE TABLE public.course_offering (offering_id BIGINT DEFAULT '0'::BIGINT NOT NULL, course_id BIGINT, semester BIGINT, section_number BIGINT, start_time TIME, end_time TIME, monday TEXT, tuesday TEXT, wednesday TEXT, thursday TEXT, friday TEXT, saturday TEXT, sunday TEXT, has_final_project BOOLEAN, has_final_exam BOOLEAN, textbook TEXT, class_address TEXT, allow_audit TEXT DEFAULT 'false'::TEXT);\nCREATE TABLE public.course_prerequisite (pre_course_id BIGINT NOT NULL, course_id BIGINT NOT NULL);\nCREATE TABLE public.course_tags_count (course_id BIGINT DEFAULT '0'::BIGINT NOT NULL, clear_grading BIGINT DEFAULT '0'::BIGINT, pop_quiz BIGINT DEFAULT '0'::BIGINT, group_projects BIGINT DEFAULT '0'::BIGINT, inspirational BIGINT DEFAULT '0'::BIGINT, long_lectures BIGINT DEFAULT '0'::BIGINT, extra_credit BIGINT DEFAULT '0'::BIGINT, few_tests BIGINT DEFAULT '0'::BIGINT, good_feedback BIGINT DEFAULT '0'::BIGINT, tough_tests BIGINT DEFAULT '0'::BIGINT, heavy_papers BIGINT DEFAULT '0'::BIGINT, cares_for_students BIGINT DEFAULT '0'::BIGINT, heavy_assignments BIGINT DEFAULT '0'::BIGINT, respected BIGINT DEFAULT '0'::BIGINT, participation BIGINT DEFAULT '0'::BIGINT, heavy_reading BIGINT DEFAULT '0'::BIGINT, tough_grader BIGINT DEFAULT '0'::BIGINT, hilarious BIGINT DEFAULT '0'::BIGINT, would_take_again BIGINT DEFAULT '0'::BIGINT, good_lecture BIGINT DEFAULT '0'::BIGINT, no_skip BIGINT DEFAULT '0'::BIGINT);\nCREATE TABLE public.instructor (instructor_id BIGINT DEFAULT '0'::BIGINT NOT NULL, name TEXT, uniqname TEXT);\nCREATE TABLE public.offering_instructor (offering_instructor_id BIGINT DEFAULT '0'::BIGINT NOT NULL, offering_id BIGINT, instructor_id BIGINT);\nCREATE TABLE public.program (program_id BIGINT NOT NULL, name TEXT, college TEXT, introduction TEXT);\nCREATE TABLE public.program_course (program_id BIGINT DEFAULT '0'::BIGINT NOT NULL, course_id BIGINT DEFAULT '0'::BIGINT NOT NULL, workload BIGINT, category TEXT DEFAULT ''::TEXT NOT NULL);\nCREATE TABLE public.program_requirement (program_id BIGINT NOT NULL, category TEXT NOT NULL, min_credit BIGINT, additional_req TEXT);\nCREATE TABLE public.semester (semester_id BIGINT NOT NULL, semester TEXT, year BIGINT);\nCREATE TABLE public.student (student_id BIGINT NOT NULL, lastname TEXT, firstname TEXT, program_id BIGINT, declare_major TEXT, total_credit BIGINT, total_gpa NUMERIC, entered_as TEXT DEFAULT 'firstyear'::TEXT, admit_term DATE, predicted_graduation_semester DATE, degree TEXT, minor TEXT, internship TEXT);\nCREATE TABLE public.student_record (student_id BIGINT NOT NULL, course_id BIGINT NOT NULL, semester BIGINT NOT NULL, grade TEXT, how TEXT, transfer_source TEXT, earn_credit TEXT DEFAULT 'y'::TEXT NOT NULL, repeat_term TEXT, test_id TEXT, offering_id BIGINT);",
  "atis_context": "CREATE TABLE public.aircraft (aircraft_code TEXT, aircraft_description TEXT, manufacturer TEXT, basic_type TEXT, engines BIGINT, propulsion TEXT, wide_body TEXT, wing_span BIGINT, length BIGINT, weight BIGINT, capacity BIGINT, pay_load BIGINT, cruising_speed BIGINT, range_miles BIGINT, pressurized TEXT);\nCREATE TABLE public.airline (airline_code TEXT, airline_name TEXT, note TEXT);\nCREATE TABLE public.airport (airport_code TEXT, airport_name TEXT, airport_location TEXT, state_code TEXT, country_name TEXT, time_zone_code TEXT, minimum_connect_time BIGINT);\nCREATE TABLE public.airport_service (city_code TEXT, airport_code TEXT, miles_distant BIGINT, direction TEXT, minutes_distant BIGINT);\nCREATE TABLE public.city (city_code TEXT, city_name TEXT, state_code TEXT, country_name TEXT, time_zone_code TEXT);\nCREATE TABLE public.class_of_service (booking_class TEXT DEFAULT ''::TEXT NOT NULL, rank BIGINT, class_description TEXT);\nCREATE TABLE public.code_description (code TEXT DEFAULT ''::TEXT NOT NULL, description TEXT);\nCREATE TABLE public.compartment_class (compartment TEXT, class_type TEXT);\nCREATE TABLE public.days (days_code TEXT, day_name TEXT);\nCREATE TABLE public.dual_carrier (main_airline TEXT, low_flight_number BIGINT, high_flight_number BIGINT, dual_airline TEXT, service_name TEXT);\nCREATE TABLE public.equipment_sequence (aircraft_code_sequence TEXT, aircraft_code TEXT);\nCREATE TABLE public.fare (fare_id BIGINT DEFAULT '0'::BIGINT NOT NULL, from_airport TEXT, to_airport TEXT, fare_basis_code TEXT, fare_airline TEXT, restriction_code TEXT, one_direction_cost BIGINT, round_trip_cost BIGINT, round_trip_required TEXT);\nCREATE TABLE public.fare_basis (fare_basis_code TEXT, booking_class TEXT, class_type TEXT, premium TEXT, economy TEXT, discounted TEXT, night TEXT, season TEXT, basis_days TEXT);\nCREATE TABLE public.flight (flight_id BIGINT DEFAULT '0'::BIGINT NOT NULL, flight_days TEXT, from_airport TEXT, to_airport TEXT, departure_time BIGINT, arrival_time BIGINT, airline_flight TEXT, airline_code TEXT, flight_number TEXT, aircraft_code_sequence TEXT, meal_code TEXT, stops BIGINT, connections BIGINT, dual_carrier TEXT, time_elapsed BIGINT);\nCREATE TABLE public.flight_fare (flight_id BIGINT, fare_id BIGINT);\nCREATE TABLE public.flight_leg (flight_id BIGINT, leg_number BIGINT, leg_flight BIGINT);\nCREATE TABLE public.flight_stop (flight_id BIGINT, stop_number BIGINT, stop_days TEXT, stop_airport TEXT, arrival_time BIGINT, arrival_airline TEXT, arrival_flight_number TEXT, departure_time BIGINT, departure_airline TEXT, departure_flight_number TEXT, stop_time BIGINT);\nCREATE TABLE public.food_service (meal_code TEXT, meal_number BIGINT, compartment TEXT, meal_description TEXT);\nCREATE TABLE public.ground_service (city_code TEXT, airport_code TEXT, transport_type TEXT, ground_fare BIGINT);\nCREATE TABLE public.month (month_number BIGINT, month_name TEXT);\nCREATE TABLE public.restriction (restriction_code TEXT, advance_purchase BIGINT, stopovers TEXT, saturday_stay_required TEXT, minimum_stay BIGINT, maximum_stay BIGINT, application TEXT, no_discounts TEXT);\nCREATE TABLE public.state (state_code TEXT, state_name TEXT, country_name TEXT);\nCREATE TABLE public.time_interval (period TEXT, begin_time BIGINT, end_time BIGINT);\nCREATE TABLE public.time_zone (time_zone_code TEXT, time_zone_name TEXT, hours_from_gmt BIGINT);",
  "broker_context": "CREATE TABLE sbCustomer (sbCustId VARCHAR(20) PRIMARY KEY, sbCustName VARCHAR(100) NOT NULL, sbCustEmail VARCHAR(100) NOT NULL, sbCustPhone VARCHAR(20), sbCustAddress1 VARCHAR(200), sbCustAddress2 VARCHAR(200), sbCustCity VARCHAR(50), sbCustState VARCHAR(20), sbCustCountry VARCHAR(50), sbCustPostalCode VARCHAR(20), sbCustJoinDate DATE NOT NULL, sbCustStatus VARCHAR(20) NOT NULL);\nCREATE TABLE sbTicker (sbTickerId VARCHAR(20) PRIMARY KEY, sbTickerSymbol VARCHAR(10) NOT NULL, sbTickerName VARCHAR(100) NOT NULL, sbTickerType VARCHAR(20) NOT NULL, sbTickerExchange VARCHAR(50) NOT NULL, sbTickerCurrency VARCHAR(10) NOT NULL, sbTickerDb2x VARCHAR(20), sbTickerIsActive BOOLEAN NOT NULL);\nCREATE TABLE sbDailyPrice (sbDpTickerId VARCHAR(20) NOT NULL, sbDpDate DATE NOT NULL, sbDpOpen NUMERIC(10,2) NOT NULL, sbDpHigh NUMERIC(10,2) NOT NULL, sbDpLow NUMERIC(10,2) NOT NULL, sbDpClose NUMERIC(10,2) NOT NULL, sbDpVolume BIGINT NOT NULL, sbDpEpochMs BIGINT NOT NULL, sbDpSource VARCHAR(50));\nCREATE TABLE sbTransaction (sbTxId VARCHAR(50) PRIMARY KEY, sbTxCustId VARCHAR(20) NOT NULL, sbTxTickerId VARCHAR(20) NOT NULL, sbTxDateTime TIMESTAMP NOT NULL, sbTxType VARCHAR(20) NOT NULL, sbTxShares NUMERIC(10,2) NOT NULL, sbTxPrice NUMERIC(10,2) NOT NULL, sbTxAmount NUMERIC(10,2) NOT NULL, sbTxCcy VARCHAR(10), sbTxTax NUMERIC(10,2) NOT NULL, sbTxCommission NUMERIC(10,2) NOT NULL, sbTxKpx VARCHAR(10), sbTxSettlementDateStr VARCHAR(25), sbTxStatus VARCHAR(10) NOT NULL);",
  "car_dealership_context": "CREATE TABLE cars (id SERIAL PRIMARY KEY, make TEXT NOT NULL, model TEXT NOT NULL, year INTEGER NOT NULL, color TEXT NOT NULL, vin_number VARCHAR(17) NOT NULL UNIQUE, engine_type TEXT NOT NULL, transmission TEXT NOT NULL, cost NUMERIC(10, 2) NOT NULL, crtd_ts TIMESTAMP NOT NULL DEFAULT NOW());\nCREATE TABLE salespersons (id SERIAL PRIMARY KEY, first_name TEXT NOT NULL, last_name TEXT NOT NULL, email VARCHAR(255) NOT NULL UNIQUE, phone VARCHAR(20) NOT NULL, hire_date DATE NOT NULL, termination_date DATE, crtd_ts TIMESTAMP NOT NULL DEFAULT NOW());\nCREATE TABLE customers (id SERIAL PRIMARY KEY, first_name TEXT NOT NULL, last_name TEXT NOT NULL, email VARCHAR(255) NOT NULL UNIQUE, phone VARCHAR(20) NOT NULL, address TEXT NOT NULL, city TEXT NOT NULL, state TEXT NOT NULL, zip_code VARCHAR(10) NOT NULL, crtd_ts TIMESTAMP NOT NULL DEFAULT NOW());\nCREATE TABLE sales (id SERIAL PRIMARY KEY, car_id INTEGER NOT NULL REFERENCES cars(id), salesperson_id INTEGER NOT NULL REFERENCES salespersons(id), customer_id INTEGER NOT NULL REFERENCES customers(id), sale_price NUMERIC(10, 2) NOT NULL, sale_date DATE NOT NULL, crtd_ts TIMESTAMP NOT NULL DEFAULT NOW());\nCREATE TABLE inventory_snapshots (id SERIAL PRIMARY KEY, snapshot_date DATE NOT NULL, car_id INTEGER NOT NULL REFERENCES cars(id), is_in_inventory BOOLEAN NOT NULL, crtd_ts TIMESTAMP NOT NULL DEFAULT NOW());\nCREATE TABLE payments_received (id SERIAL PRIMARY KEY, sale_id INTEGER NOT NULL REFERENCES sales(id), payment_date DATE NOT NULL, payment_amount NUMERIC(10, 2) NOT NULL, payment_method TEXT NOT NULL, crtd_ts TIMESTAMP NOT NULL DEFAULT NOW());\nCREATE TABLE payments_made (id SERIAL PRIMARY KEY, vendor_name TEXT NOT NULL, payment_date DATE NOT NULL, payment_amount NUMERIC(10, 2) NOT NULL, payment_method TEXT NOT NULL, invoice_number VARCHAR(50) NOT NULL, invoice_date DATE NOT NULL, due_date DATE NOT NULL, crtd_ts TIMESTAMP NOT NULL DEFAULT NOW());",
  "derm_treatment_context": "CREATE TABLE doctors (doc_id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), specialty TEXT, year_reg INT, med_school_name VARCHAR(100), loc_city VARCHAR(50), loc_state CHAR(2), loc_zip VARCHAR(10), bd_cert_num VARCHAR(20));\nCREATE TABLE patients (patient_id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), date_of_birth DATE, date_of_registration DATE, gender VARCHAR(10), email VARCHAR(100), phone VARCHAR(20), addr_street VARCHAR(100), addr_city VARCHAR(50), addr_state CHAR(2), addr_zip VARCHAR(10), ins_type TEXT, ins_policy_num VARCHAR(20), height_cm FLOAT, weight_kg FLOAT);\nCREATE TABLE drugs (drug_id SERIAL PRIMARY KEY, drug_name VARCHAR(100), manufacturer VARCHAR(100), drug_type TEXT, moa TEXT, fda_appr_dt DATE, admin_route TEXT, dos_amt DECIMAL(10,2), dos_unit VARCHAR(20), dos_freq_hrs INT, ndc VARCHAR(20));\nCREATE TABLE diagnoses (diag_id SERIAL PRIMARY KEY, diag_code VARCHAR(10), diag_name VARCHAR(100), diag_desc TEXT);\nCREATE TABLE treatments (treatment_id SERIAL PRIMARY KEY, patient_id INT REFERENCES patients(patient_id), doc_id INT REFERENCES doctors(doc_id), drug_id INT REFERENCES drugs(drug_id), diag_id INT REFERENCES diagnoses(diag_id), start_dt DATE, end_dt DATE, is_placebo BOOLEAN, tot_drug_amt DECIMAL(10,2), drug_unit TEXT);\nCREATE TABLE outcomes (outcome_id SERIAL PRIMARY KEY, treatment_id INT REFERENCES treatments(treatment_id), assess_dt DATE, day7_lesion_cnt INT, day30_lesion_cnt INT, day100_lesion_cnt INT, day7_pasi_score DECIMAL(4,1), day30_pasi_score DECIMAL(4,1), day100_pasi_score DECIMAL(4,1), day7_tewl DECIMAL(5,2), day30_tewl DECIMAL(5,2), day100_tewl DECIMAL(5,2), day7_itch_vas INT, day30_itch_vas INT, day100_itch_vas INT, day7_hfg DECIMAL(4,1), day30_hfg DECIMAL(4,1), day100_hfg DECIMAL(4,1));\nCREATE TABLE adverse_events (id SERIAL PRIMARY KEY, treatment_id INT REFERENCES treatments(treatment_id), reported_dt DATE, description TEXT);\nCREATE TABLE concomitant_meds (id SERIAL PRIMARY KEY, treatment_id INT REFERENCES treatments(treatment_id), med_name VARCHAR(100), start_dt TEXT, end_dt TEXT, dose_amt DECIMAL(10,2), dose_unit TEXT, freq_hrs INT);",
  "ewallet_context": "CREATE SCHEMA IF NOT EXISTS consumer_div;\n\nCREATE TABLE consumer_div.users (uid BIGINT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, phone_number VARCHAR(20), created_at TIMESTAMP NOT NULL, last_login_at TIMESTAMP, user_type VARCHAR(20) NOT NULL, status VARCHAR(20) NOT NULL, country VARCHAR(2), address_billing TEXT, address_delivery TEXT, kyc_status VARCHAR(20), kyc_verified_at TIMESTAMP);\n\nCREATE TABLE consumer_div.merchants (mid BIGINT PRIMARY KEY, name VARCHAR(100) NOT NULL, description TEXT, website_url VARCHAR(200), logo_url VARCHAR(200), created_at TIMESTAMP NOT NULL, country VARCHAR(2), state VARCHAR(50), city VARCHAR(50), postal_code VARCHAR(20), address TEXT, status VARCHAR(20) NOT NULL, category VARCHAR(50), sub_category VARCHAR(50), mcc INT, contact_name VARCHAR(100), contact_email VARCHAR(100), contact_phone VARCHAR(20));\n\nCREATE TABLE consumer_div.coupons (cid BIGINT PRIMARY KEY, merchant_id BIGINT NOT NULL REFERENCES consumer_div.merchants(mid), code VARCHAR(20) NOT NULL, description TEXT, start_date DATE NOT NULL, end_date DATE NOT NULL, discount_type VARCHAR(20) NOT NULL, discount_value DECIMAL(10,2) NOT NULL, min_purchase_amount DECIMAL(10,2), max_discount_amount DECIMAL(10,2), redemption_limit INT, status VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP);\n\nCREATE TABLE consumer_div.wallet_transactions_daily (txid SERIAL PRIMARY KEY, sender_id BIGINT NOT NULL, sender_type INT NOT NULL, receiver_id BIGINT NOT NULL, receiver_type INT NOT NULL, amount DECIMAL(10,2) NOT NULL, status VARCHAR(20) NOT NULL, type VARCHAR(20) NOT NULL, description TEXT, coupon_id BIGINT, created_at TIMESTAMP NOT NULL, completed_at TIMESTAMP, transaction_ref VARCHAR(36) NOT NULL, gateway_name VARCHAR(50), gateway_ref VARCHAR(50), device_id VARCHAR(50), ip_address VARCHAR(50), user_agent TEXT);\n\nCREATE TABLE consumer_div.wallet_user_balance_daily (user_id BIGINT, balance DECIMAL(10,2) NOT NULL, updated_at TIMESTAMP NOT NULL);\n\nCREATE TABLE consumer_div.wallet_merchant_balance_daily (merchant_id BIGINT, balance DECIMAL(10,2) NOT NULL, updated_at TIMESTAMP NOT NULL);\n\nCREATE TABLE consumer_div.notifications (id SERIAL PRIMARY KEY, user_id INT NOT NULL REFERENCES consumer_div.users(uid), message TEXT NOT NULL, type VARCHAR(50) NOT NULL, status VARCHAR(20) NOT NULL, created_at TIMESTAMP NOT NULL, read_at TIMESTAMP, device_type VARCHAR(10), device_id VARCHAR(36), action_url TEXT);\n\nCREATE TABLE consumer_div.user_sessions (user_id BIGINT NOT NULL, session_start_ts TIMESTAMP NOT NULL, session_end_ts TIMESTAMP, device_type VARCHAR(10), device_id VARCHAR(36));\n\nCREATE TABLE consumer_div.user_setting_snapshot (user_id BIGINT NOT NULL, snapshot_date DATE NOT NULL, tx_limit_daily DECIMAL(10,2), tx_limit_monthly DECIMAL(10,2), membership_status INTEGER, password_hash VARCHAR(255), api_key VARCHAR(255), verified_devices TEXT, verified_ips TEXT, mfa_enabled BOOLEAN, marketing_opt_in BOOLEAN, created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (user_id, snapshot_date));",
  "geography_context": "CREATE TABLE public.border_info (state_name text, border text);\n\nCREATE TABLE public.city (city_name text, population bigint, country_name text DEFAULT ''::text NOT NULL, state_name text);\n\nCREATE TABLE public.highlow (state_name text, highest_elevation text, lowest_point text, highest_point text, lowest_elevation text);\n\nCREATE TABLE public.lake (lake_name text, area double precision, country_name text DEFAULT ''::text NOT NULL, state_name text);\n\nCREATE TABLE public.mountain (mountain_name text, mountain_altitude bigint, country_name text DEFAULT ''::text NOT NULL, state_name text);\n\nCREATE TABLE public.river (river_name text, length bigint, country_name text DEFAULT ''::text NOT NULL, traverse text);\n\nCREATE TABLE public.state (state_name text, population bigint, area double precision, country_name text DEFAULT ''::text NOT NULL, capital text, density double precision);",
  "restaurants_context": "CREATE TABLE public.geographic (city_name text, county text, region text);\n\nCREATE TABLE public.location (restaurant_id bigint, house_number bigint, street_name text, city_name text);\n\nCREATE TABLE public.restaurant (id bigint, name text, food_type text, city_name text, rating real);",
  "scholar_context": "CREATE TABLE public.author (authorid bigint NOT NULL, authorname text);\n\nCREATE TABLE public.cite (citingpaperid bigint NOT NULL, citedpaperid bigint NOT NULL);\n\nCREATE TABLE public.dataset (datasetid bigint NOT NULL, datasetname text);\n\nCREATE TABLE public.field (fieldid bigint);\n\nCREATE TABLE public.journal (journalid bigint NOT NULL, journalname text);\n\nCREATE TABLE public.keyphrase (keyphraseid bigint NOT NULL, keyphrasename text);\n\nCREATE TABLE public.paper (paperid bigint NOT NULL, title text, venueid bigint, year bigint, numciting bigint, numcitedby bigint, journalid bigint);\n\nCREATE TABLE public.paperdataset (paperid bigint, datasetid bigint);\n\nCREATE TABLE public.paperfield (fieldid bigint, paperid bigint);\n\nCREATE TABLE public.paperkeyphrase (paperid bigint, keyphraseid bigint);\n\nCREATE TABLE public.venue (venueid bigint NOT NULL, venuename text);\n\nCREATE TABLE public.writes (paperid bigint, authorid bigint);",
  "yelp_context": "CREATE TABLE public.business (bid bigint, business_id text, name text, full_address text, city text, latitude text, longitude text, review_count bigint, is_open bigint, state text);\n\nCREATE TABLE public.category (id bigint, business_id text, category_name text);\n\nCREATE TABLE public.checkin (cid bigint, business_id text, count bigint, day text);\n\nCREATE TABLE public.neighbourhood (id bigint, business_id text, neighbourhood_name text);\n\nCREATE TABLE public.review (rid bigint, business_id text, user_id text, rating real, text text, year bigint, month text);\n\nCREATE TABLE public.tip (tip_id bigint, business_id text, text text, user_id text, likes bigint, year bigint, month text);\n\nCREATE TABLE public.users (uid bigint, user_id text, name text);"
}