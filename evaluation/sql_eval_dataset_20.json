[
    {
        "question": "Which authors have written publications in both the domain \"Machine Learning\" and the domain \"Data Science\"?",
        "answer": "SELECT {author.name,author.aid} FROM author WHERE author.aid IN (SELECT domain_author.aid FROM domain_author WHERE domain_author.did IN (SELECT domain.did FROM DOMAIN WHERE domain.name IN ('Machine Learning', 'Data Science') ) GROUP BY 1 HAVING COUNT(DISTINCT domain_author.did) = 2);",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "group_by",
        "generation": "SELECT a.name, a.aid FROM public.author a WHERE a.aid IN (SELECT da.aid FROM public.domain_author da JOIN public.domain d ON da.did = d.did WHERE d.name IN ('Machine Learning', 'Data Science') GROUP BY da.aid HAVING COUNT(DISTINCT d.name) = 2);"
    },
    {
        "question": "What is the total number of citations received by each author?",
        "answer": "SELECT {author.name, author.aid}, sum(publication.citation_num) AS total_citations FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid GROUP BY {} ORDER BY total_citations DESC NULLS LAST;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "group_by",
        "generation": "SELECT a.name AS author_name, a.aid AS author_id, COUNT(c.citing) AS total_citations FROM public.author a JOIN public.writes w ON a.aid = w.aid JOIN public.cite c ON w.pid = c.cited GROUP BY a.name, a.aid ORDER BY total_citations DESC;"
    },
    {
        "question": "What is the total number of publications published in each year?",
        "answer": "SELECT publication.year, COUNT(DISTINCT publication.pid) AS total_publications FROM publication GROUP BY publication.year ORDER BY publication.year;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "group_by",
        "generation": "SELECT year, COUNT(pid) AS total_publications FROM public.publication GROUP BY year ORDER BY year;"
    },
    {
        "question": "What is the average number of references cited by publications in each domain name?",
        "answer": "SELECT {domain.name,domain.did}, AVG(publication.reference_num) AS average_references FROM domain_publication JOIN publication ON domain_publication.pid = publication.pid JOIN domain ON domain.did = domain_publication.did GROUP BY {};",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "group_by",
        "generation": "SELECT d.name AS domain_name, AVG(p.reference_num) AS average_references FROM public.domain AS d JOIN public.domain_publication AS dp ON d.did = dp.did JOIN public.publication AS p ON dp.pid = p.pid GROUP BY d.name ORDER BY d.name;"
    },
    {
        "question": "What is the average number of citations received by publications in each year?",
        "answer": "SELECT publication.year, AVG(publication.citation_num) AS average_citations FROM publication GROUP BY publication.year ORDER BY publication.year NULLS LAST;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "group_by",
        "generation": "SELECT p.year AS publication_year, AVG(p.citation_num) AS average_citations FROM public.publication AS p GROUP BY p.year ORDER BY p.year;"
    },
    {
        "question": "What is the title of the publication that has received the highest number of citations?",
        "answer": "SELECT publication.title FROM publication ORDER BY publication.citation_num DESC NULLS LAST LIMIT 1;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "order_by",
        "generation": "SELECT title FROM public.publication ORDER BY citation_num DESC LIMIT 1;"
    },
    {
        "question": "What are the top 5 domains with the highest number of authors associated with them?",
        "answer": "SELECT {d.name, d.did}, COUNT(DISTINCT a.aid) AS author_count FROM author a JOIN domain_author da ON a.aid = da.aid JOIN domain d ON da.did = d.did GROUP BY {} ORDER BY author_count DESC LIMIT 5;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "order_by",
        "generation": "SELECT d.name, COUNT(da.aid) AS num_authors FROM public.domain d JOIN public.domain_author da ON d.did = da.did GROUP BY d.name ORDER BY num_authors DESC LIMIT 5;"
    },
    {
        "question": "What are the top 3 titles of the publications that have the highest number of references cited, ordered by the number of references cited in descending order?",
        "answer": "SELECT publication.title FROM publication ORDER BY publication.reference_num DESC LIMIT 3;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "order_by",
        "generation": "SELECT title, reference_num FROM public.publication ORDER BY reference_num DESC LIMIT 3;"
    },
    {
        "question": "What are the top 3 publications with the highest number of citations?",
        "answer": "SELECT {publication.title, publication.pid}, publication.citation_num FROM publication ORDER BY publication.citation_num DESC LIMIT 3;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "order_by",
        "generation": "SELECT title, citation_num FROM public.publication ORDER BY citation_num DESC LIMIT 3;"
    },
    {
        "question": "What are the titles of all publications ordered alphabetically?",
        "answer": "SELECT DISTINCT publication.title FROM publication ORDER BY publication.title ASC NULLS LAST;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "order_by",
        "generation": "SELECT title FROM public.publication ORDER BY title ASC;"
    },
    {
        "question": "What is the ratio of publications to authors in the database?",
        "answer": "SELECT CAST(COUNT(DISTINCT publication.pid) AS FLOAT) / NULLIF(COUNT(DISTINCT author.aid), 0) AS publication_to_author_ratio FROM publication, author;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "ratio",
        "generation": "SELECT (SELECT COUNT(DISTINCT pid) FROM public.publication)::NUMERIC / (SELECT COUNT(DISTINCT aid) FROM public.author)::NUMERIC AS publication_to_author_ratio;"
    },
    {
        "question": "What is the ratio of publications presented in conferences to publications published in journals?",
        "answer": "SELECT CAST(COUNT(DISTINCT CASE WHEN cid IS NOT NULL THEN pid END) AS FLOAT) / NULLIF(COUNT(DISTINCT CASE WHEN jid IS NOT NULL THEN pid END), 0) AS ratio FROM publication;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "ratio",
        "generation": "SELECT (SELECT COUNT(DISTINCT pid) FROM public.publication WHERE cid IS NOT NULL)::NUMERIC / (SELECT COUNT(DISTINCT pid) FROM public.publication WHERE jid IS NOT NULL)::NUMERIC AS conference_to_journal_publication_ratio;"
    },
    {
        "question": "What is the ratio of the total number of publications to the total number of keywords within each domain ID? Show all domain IDs.",
        "answer": "SELECT domain_publication.did, CAST(COUNT(DISTINCT domain_publication.pid) AS FLOAT) / NULLIF(COUNT(DISTINCT domain_keyword.kid), 0) AS publication_to_keyword_ratio FROM domain_publication LEFT JOIN domain_keyword ON domain_publication.did = domain_keyword.did GROUP BY domain_publication.did ORDER BY publication_to_keyword_ratio DESC NULLS LAST;SELECT domain_publication.did, CAST(COUNT(DISTINCT domain_publication.pid) AS FLOAT) / NULLIF(COUNT(DISTINCT domain_keyword.kid), 0) AS publication_to_keyword_ratio FROM domain_keyword LEFT JOIN domain_publication ON domain_publication.did = domain_keyword.did GROUP BY domain_publication.did ORDER BY publication_to_keyword_ratio DESC NULLS LAST;SELECT d.did, COALESCE(CAST(COUNT(DISTINCT dp.pid) AS FLOAT) / NULLIF(COUNT(DISTINCT dk.kid), 0), 0) AS publication_to_keyword_ratio FROM domain d LEFT JOIN domain_publication dp ON d.did = dp.did LEFT JOIN domain_keyword dk ON d.did = dk.did GROUP BY d.did ORDER BY publication_to_keyword_ratio DESC NULLS LAST;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "ratio",
        "generation": "SELECT d.did, (COUNT(DISTINCT dp.pid)::NUMERIC / COUNT(DISTINCT dk.kid)::NUMERIC) AS publication_to_keyword_ratio FROM public.domain d LEFT JOIN public.domain_publication dp ON d.did = dp.did LEFT JOIN public.domain_keyword dk ON d.did = dk.did GROUP BY d.did;"
    },
    {
        "question": "How does the ratio of publications to journals change over the years? Return the annual numbers of publications and journals as well.",
        "answer": "SELECT publication.year, COUNT(DISTINCT publication.pid) AS num_publications, COUNT(DISTINCT publication.jid) AS num_journals, CAST(COUNT(DISTINCT publication.pid) AS FLOAT) / NULLIF(COUNT(DISTINCT publication.jid), 0) AS ratio FROM publication GROUP BY publication.year ORDER BY publication.year;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "ratio",
        "generation": "SELECT p.year, COUNT(DISTINCT p.pid) AS num_publications, COUNT(DISTINCT j.jid) AS num_journals, (COUNT(DISTINCT p.pid)::NUMERIC / NULLIF(COUNT(DISTINCT j.jid), 0)::NUMERIC) AS publication_to_journal_ratio FROM public.publication p LEFT JOIN public.journal j ON p.jid = j.jid GROUP BY p.year ORDER BY p.year;"
    },
    {
        "question": "How does the ratio of authors to organizations differ by continent?",
        "answer": "SELECT organization.continent, COUNT(DISTINCT author.aid)::float / NULLIF(COUNT(DISTINCT organization.oid), 0) AS ratio FROM organization LEFT JOIN author ON author.oid = organization.oid GROUP BY organization.continent ORDER BY ratio DESC NULLS LAST;WITH author_counts AS (SELECT o.continent, COUNT(DISTINCT a.aid) AS author_count FROM author AS a JOIN organization AS o ON a.oid = o.oid GROUP BY o.continent), organization_counts AS (SELECT o.continent, COUNT(DISTINCT o.oid) AS organization_count FROM organization AS o GROUP BY o.continent) SELECT ac.continent, CAST(ac.author_count AS FLOAT) / NULLIF(oc.organization_count, 0) AS author_to_organization_ratio FROM author_counts AS ac JOIN organization_counts AS oc ON ac.continent = oc.continent ORDER BY author_to_organization_ratio DESC;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "ratio",
        "generation": "SELECT o.continent, COUNT(DISTINCT a.aid) AS num_authors, COUNT(DISTINCT o.oid) AS num_organizations, (COUNT(DISTINCT a.aid)::NUMERIC / NULLIF(COUNT(DISTINCT o.oid), 0)::NUMERIC) AS author_to_organization_ratio FROM public.author a JOIN public.organization o ON a.oid = o.oid GROUP BY o.continent ORDER BY o.continent;"
    },
    {
        "question": "Which author had the most publications in the year 2021 and how many publications did he/she have that year?",
        "answer": "SELECT {author.name, author.aid}, COUNT(publication.pid) AS publication_count FROM writes JOIN author ON writes.aid = author.aid JOIN publication ON writes.pid = publication.pid WHERE publication.year = 2021 GROUP BY {} ORDER BY publication_count DESC NULLS LAST LIMIT 1;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "table_join",
        "generation": "SELECT a.name, COUNT(w.pid) AS num_publications FROM public.author a JOIN public.writes w ON a.aid = w.aid JOIN public.publication p ON w.pid = p.pid WHERE p.year = 2021 GROUP BY a.name ORDER BY num_publications DESC LIMIT 1;"
    },
    {
        "question": "What is the total number of publications presented in each conference?",
        "answer": "SELECT {conference.name, conference.cid}, COUNT(publication.pid) AS total_publications FROM publication JOIN conference ON publication.cid = conference.cid GROUP BY {} ORDER BY total_publications DESC;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "table_join",
        "generation": "SELECT c.name AS conference_name, COUNT(p.pid) AS total_publications FROM public.conference c JOIN public.publication p ON c.cid = p.cid GROUP BY c.name ORDER BY total_publications DESC;"
    },
    {
        "question": "What is the total number of publications in each journal, ordered by the number of publications in descending order?",
        "answer": "SELECT {journal.name, journal.jid}, COUNT(publication.pid) AS total_publications FROM publication JOIN journal ON publication.jid=journal.jid GROUP BY {} ORDER BY total_publications DESC NULLS LAST;SELECT {journal.name, journal.jid}, COUNT(publication.pid) AS total_publications FROM journal LEFT JOIN publication ON journal.jid=publication.jid GROUP BY {} ORDER BY total_publications DESC NULLS LAST;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "table_join",
        "generation": "SELECT j.name AS journal_name, COUNT(p.pid) AS total_publications FROM public.journal j JOIN public.publication p ON j.jid = p.jid GROUP BY j.name ORDER BY total_publications DESC;"
    },
    {
        "question": "How many publications were presented at each conference, ordered by the number of publications in descending order? Give the names of the conferences and their corresponding number of publications.",
        "answer": "SELECT conference.name, COUNT(publication.pid) AS num_publications FROM publication JOIN conference ON publication.cid=conference.cid GROUP BY conference.name, conference.cid ORDER BY num_publications DESC NULLS LAST;",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "table_join",
        "generation": "SELECT c.name AS conference_name, COUNT(p.pid) AS total_publications FROM public.conference c JOIN public.publication p ON c.cid = p.cid GROUP BY c.name ORDER BY total_publications DESC;"
    },
    {
        "question": "How many publications were published in journals whose names start with the letter \"J\"?",
        "answer": "SELECT count(DISTINCT publication.pid) FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name ilike 'J%'",
        "db_name": "academic",
        "context": "CREATE TABLE public.author (aid BIGINT NOT NULL, homepage TEXT, name TEXT, oid BIGINT);\nCREATE TABLE public.cite (cited BIGINT, citing BIGINT);\nCREATE TABLE public.conference (cid BIGINT NOT NULL, homepage TEXT, name TEXT);\nCREATE TABLE public.domain (did BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.domain_author (aid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_conference (cid BIGINT NOT NULL, did BIGINT NOT NULL);\nCREATE TABLE public.domain_journal (did BIGINT NOT NULL, jid BIGINT NOT NULL);\nCREATE TABLE public.domain_keyword (did BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.domain_publication (did BIGINT NOT NULL, pid BIGINT NOT NULL);\nCREATE TABLE public.journal (homepage TEXT, jid BIGINT NOT NULL, name TEXT);\nCREATE TABLE public.keyword (keyword TEXT, kid BIGINT NOT NULL);\nCREATE TABLE public.organization (continent TEXT, homepage TEXT, name TEXT, oid BIGINT NOT NULL);\nCREATE TABLE public.publication (abstract TEXT, cid BIGINT, citation_num BIGINT, jid BIGINT, pid BIGINT NOT NULL, reference_num BIGINT, title TEXT, year BIGINT);\nCREATE TABLE public.publication_keyword (pid BIGINT NOT NULL, kid BIGINT NOT NULL);\nCREATE TABLE public.writes (aid BIGINT NOT NULL, pid BIGINT NOT NULL);",
        "query_category": "table_join",
        "generation": "SELECT COUNT(p.pid) AS total_publications FROM public.publication p JOIN public.journal j ON p.jid = j.jid WHERE j.name LIKE 'J%';"
    }
]